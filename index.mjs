// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-str@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";var i=r,n=e.isPrimitive,o=s,h=t;var d=function(r,e,s){var t,d,a,m,p,l,f,u;if(!i(r))throw new TypeError(h("0ME2a",r));if(!n(e))throw new TypeError(h("0ME3k",e));if(!n(s))throw new TypeError(h("0ME2y",s));if(0===(t=r.length))throw new RangeError(h("0ME0a"));if(t%(p=e+s)!=0)throw new RangeError("invalid arguments. Length of the first argument is incompatible with the second and third arguments.");for(d=[],a=[],l=2*p,u=2*e,f=0;f<=l;f++)0===f?f===u?a.push("() => ("):a.push("("):f===l?f===u?a.push(") => ()"):a.push(")"):f===u?a.push(") => ("):f%2==1?a.push(""):a.push(", ");for(f=0;f<t;f++)null===(m=o(r[f]))&&(m=r[f]),a[2*(u=f%p)+1]=m,u===p-1&&d.push(a.join(""));return d};export{d as default};
//# sourceMappingURL=index.mjs.map
